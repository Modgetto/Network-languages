Практическая часть.
1. Проверка на четность/нечетность: Запросите у пользователя целое число и определите, является ли оно четным или нечетным. Выведите соответствующее сообщение.
2. Поиск максимума: Попросите пользователя ввести три числа. Найдите и выведите максимальное из них, используя условный оператор.
3. Факториал числа: Запросите у пользователя целое неотрицательное число и вычислите его факториал. Факториал числа n, вычисляется как n! = 1 × 2 × 3 × … × n.
4. Проверка на простоту: Попросите пользователя ввести целое число больше 1. Определите, является ли это число простым (т.е., делится только на себя и на 1).
5. Таблица умножения: Выведите таблицу умножения от 1 до 10 для заданного пользователем числа.
6. Палиндром: Проверьте, является ли введенная пользователем строка палиндромом (читается одинаково как слева направо, так и справа налево, игнорируя пробелы, знаки препинания и регистр).
7. Подсчет гласных и согласных: Попросите пользователя ввести строку. Посчитайте количество гласных и согласных букв в этой строке.
8. Сумма элементов списка: Создайте список чисел. Вычислите и выведите сумму всех элементов списка.
9. Обратный порядок чисел: Запросите у пользователя натуральное число n. Выведите все числа от n до 1 в обратном порядке.
10. FizzBuzz: Напишите программу, которая выводит числа от 1 до 100. Но для чисел, кратных трём, вместо числа выведите “Fizz”, а для чисел, кратных пяти, выведите “Buzz”. Для чисел, кратных как трём, так и пяти, выведите “FizzBuzz”.
Вопросы к защите
Что из себя представляют ветвления в python, какие конструкции языка используються?
Ответ: Ветвления в Python позволяют программе принимать решения и выполнять различные блоки кода в зависимости от условий. Конструкции: if-elif-else, трехместный оператор.
Что из себя представляют циклы в python, какие конструкции языка используються? В чем их отличие?
Ответ: Циклы в Python - это конструкции, которые позволяют выполнять повторяющиеся действия над данными или блоками кода. Они позволяют автоматизировать повторяющиеся задачи и обрабатывать структуры данных. Отличие между for и while циклами: for цикл: Используется, когда количество итераций известно заранее или когда нужно перебрать элементы в коллекции или последовательности. while цикл: Используется, когда количество итераций неизвестно заранее или когда нужно продолжать выполнение до выполнения определенного условия. Условие проверяется перед каждой итерацией.
Что из себя представляют списки, кортежи, словари?
Ответ: Списки (List): Упорядоченная изменяемая коллекция объектов. Элементы списка могут быть любого типа данных. Создаются с помощью квадратных скобок [].
Кортежи (Tuple): Упорядоченная неизменяемая коллекция объектов. Элементы кортежа могут быть любого типа данных. Создаются с помощью круглых скобок ()
Словари (Dictionary): Неупорядоченная изменяемая коллекция объектов, состоящая из пар ключ-значение. Ключи должны быть уникальными и неизменяемыми (например, строки, числа, кортежи). Создаются с помощью фигурных скобок {}.
